/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { MyToken, MyTokenInterface } from "../MyToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimal",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610a1b380380610a1b83398101604081905261002f91610184565b600061003b8482610290565b5060016100488382610290565b506002805460ff191660ff831690811790915561007b9061006a90600a61044d565b610075906001610460565b33610083565b50505061048a565b81600360008282546100959190610477565b90915550506001600160a01b038116600090815260046020526040812080548492906100c2908490610477565b90915550505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126100f257600080fd5b81516001600160401b0381111561010b5761010b6100cb565b604051601f8201601f19908116603f011681016001600160401b0381118282101715610139576101396100cb565b60405281815283820160200185101561015157600080fd5b60005b8281101561017057602081860181015183830182015201610154565b506000918101602001919091529392505050565b60008060006060848603121561019957600080fd5b83516001600160401b038111156101af57600080fd5b6101bb868287016100e1565b602086015190945090506001600160401b038111156101d957600080fd5b6101e5868287016100e1565b925050604084015160ff811681146101fc57600080fd5b809150509250925092565b600181811c9082168061021b57607f821691505b60208210810361023b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561028b57806000526020600020601f840160051c810160208510156102685750805b601f840160051c820191505b818110156102885760008155600101610274565b50505b505050565b81516001600160401b038111156102a9576102a96100cb565b6102bd816102b78454610207565b84610241565b6020601f8211600181146102f157600083156102d95750848201515b600019600385901b1c1916600184901b178455610288565b600084815260208120601f198516915b828110156103215787850151825560209485019460019092019101610301565b508482101561033f5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561039f578085048111156103835761038361034e565b600184161561039157908102905b60019390931c928002610368565b935093915050565b6000826103b657506001610447565b816103c357506000610447565b81600181146103d957600281146103e3576103ff565b6001915050610447565b60ff8411156103f4576103f461034e565b50506001821b610447565b5060208310610133831016604e8410600b8410161715610422575081810a610447565b61042f6000198484610364565b80600019048211156104435761044361034e565b0290505b92915050565b600061045983836103a7565b9392505050565b80820281158282048414176104475761044761034e565b808201808211156104475761044761034e565b610582806104996000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461010357806370a082311461012257806395d89b4114610142578063a9059cbb1461014a578063dd62ed3e1461015f57600080fd5b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100d957806323b872dd146100f0575b600080fd5b6100a061018a565b6040516100ad91906103b0565b60405180910390f35b6100c96100c436600461041a565b610218565b60405190151581526020016100ad565b6100e260035481565b6040519081526020016100ad565b6100c96100fe366004610444565b610247565b6002546101109060ff1681565b60405160ff90911681526020016100ad565b6100e2610130366004610481565b60046020526000908152604090205481565b6100a061034e565b61015d61015836600461041a565b61035b565b005b6100e261016d3660046104a3565b600560209081526000928352604080842090915290825290205481565b60008054610197906104d6565b80601f01602080910402602001604051908101604052809291908181526020018280546101c3906104d6565b80156102105780601f106101e557610100808354040283529160200191610210565b820191906000526020600020905b8154815290600101906020018083116101f357829003601f168201915b505050505081565b3360009081526005602090815260408083206001600160a01b0386168452909152902081905560015b92915050565b6001600160a01b03831660009081526005602090815260408083203384529091528120548211156102b25760405162461bcd60e51b8152602060048201526011602482015270416c6c6f77616e636520746f6f206c6f7760781b604482015260640160405180910390fd5b6001600160a01b0384166000908152600560209081526040808320338452909152812080548492906102e5908490610526565b90915550506001600160a01b03841660009081526004602052604081208054849290610312908490610526565b90915550506001600160a01b0383166000908152600460205260408120805484929061033f908490610539565b90915550600195945050505050565b60018054610197906104d6565b336000908152600460205260408120805483929061037a908490610526565b90915550506001600160a01b038216600090815260046020526040812080548392906103a7908490610539565b90915550505050565b602081526000825180602084015260005b818110156103de57602081860181015160408684010152016103c1565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461041557600080fd5b919050565b6000806040838503121561042d57600080fd5b610436836103fe565b946020939093013593505050565b60008060006060848603121561045957600080fd5b610462846103fe565b9250610470602085016103fe565b929592945050506040919091013590565b60006020828403121561049357600080fd5b61049c826103fe565b9392505050565b600080604083850312156104b657600080fd5b6104bf836103fe565b91506104cd602084016103fe565b90509250929050565b600181811c908216806104ea57607f821691505b60208210810361050a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561024157610241610510565b808201808211156102415761024161051056fea26469706673582212200249db60f16c642d814fef911f98d464b5941a91eb964f0d67537f0d639d646664736f6c634300081c0033";

type MyTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyToken__factory extends ContractFactory {
  constructor(...args: MyTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _name: string,
    _symbol: string,
    _decimal: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _decimal,
      overrides || {}
    );
  }
  override deploy(
    _name: string,
    _symbol: string,
    _decimal: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_name, _symbol, _decimal, overrides || {}) as Promise<
      MyToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MyToken__factory {
    return super.connect(runner) as MyToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyTokenInterface {
    return new Interface(_abi) as MyTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MyToken {
    return new Contract(address, _abi, runner) as unknown as MyToken;
  }
}
